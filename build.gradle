plugins {
    id 'java'
    id 'maven-publish'
}

group = 'fr.dreamin'
version = '0.0.2'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()

    maven { url 'https://jitpack.io' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' } // This lets gradle find the BungeeCord files online
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven {
        url 'https://maven.citizensnpcs.co/repo'
    }
    maven {
        name = 'citizens-repo'
        url 'https://maven.citizensnpcs.co/repo'
    }
    maven {
        url "https://libraries.minecraft.net/"
    }
    maven {
        name 'codemc'
        url 'https://repo.codemc.org/repository/maven-public/'
    }
    maven {
        url 'https://repo.codemc.io/repository/maven-snapshots/'
    }
    maven { url 'https://mvn.lumine.io/repository/maven-public/' }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    implementation 'com.mojang:authlib:3.17.30'
    compileOnly 'net.skinsrestorer:skinsrestorer-api:15.0.3'
    implementation 'com.google.code.gson:gson:2.8.9'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'net.md-5:bungeecord-api:1.20-R0.1-SNAPSHOT'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.8.3'
    compileOnly ('net.citizensnpcs:citizens-main:2.0.31-SNAPSHOT') {
        exclude group: '*', module: '*'
    }
    compileOnly group: 'com.denizenscript', name: 'denizen', version: '1.3.0-SNAPSHOT'
    compileOnly 'com.mojang:datafixerupper:1.0.20'
    implementation(platform("com.intellectualsites.bom:bom-newest:1.40")) // Ref: https://github.com/IntellectualSites/bom
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core")
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit")
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    implementation 'com.github.tritonmc:Triton:3.9.4'
    implementation files('libs/openaudiomc.jar')
    implementation 'com.ticxo.modelengine:ModelEngine:R4.0.4'
    implementation 'org.xerial:sqlite-jdbc:3.45.1.0'

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

compileJava.options.encoding = 'UTF-8'
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
setLibsDirName("../test-server/plugins")
