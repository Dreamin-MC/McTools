plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1' // Assurez-vous que la version est compatible avec votre version de Gradle
}

group = 'fr.dreamin'
version = '1.0'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url 'https://repo.xenondevs.xyz/releases'
    }
    maven { url "https://maven.citizensnpcs.co/repo"}
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    implementation 'com.mojang:authlib:3.17.30'
    implementation 'com.google.code.gson:gson:2.8.9'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.xerial:sqlite-jdbc:3.45.1.0'
    implementation "xyz.xenondevs.invui:invui-kotlin:1.37"
    implementation 'xyz.xenondevs.invui:inventory-access-r20:1.37:remapped-mojang'
    implementation 'fr.skytasul:glowingentities:1.3.5'
    implementation 'fr.mrmicky:fastboard:2.1.3'
    compileOnly group: 'com.denizenscript', name: 'denizen', version: '1.3.1-SNAPSHOT'
    implementation 'net.kyori:adventure-nbt:4.12.0'
    implementation files('libs/citizens.jar')
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.runtimeClasspath]
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
setLibsDirName("../test-server/plugins")
